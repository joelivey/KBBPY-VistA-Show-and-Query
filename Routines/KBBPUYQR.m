KBBPUYQR	;JIVEYSOFT.COM/JLI - Unit tests for KBBPYQRY ;04/30/17  18:43;
	;;0.0;KBBP;
	; includes tests for:
	;   KBBPYQRY
	D EN^%ut($T(+0))
	Q
	;
STARTUP	;
	D STARTUP^KBBPUYNM
	Q
	;
SHUTDOWN	;
	D SHUTDOWN^KBBPUYNM
	Q
	;
	; KBBPYQRY - set up a routine to perform specific queries
	;
EN	; @TEST
	N DATE1,DATE2,DATEVAL
	S DATE1=$$SETDATE($$NOW^XLFDT())
	D EN^KBBPYQRY
	S DATE2=$$SETDATE($$NOW^XLFDT())
	S DATEVAL=$E($P($T(+1^KBBPZ999),";",3),1,15)
	;W !,"DATE1=",DATE1,"  DATE2=",DATE2,"  DATEVAL=",DATEVAL
	D CHKTF((DATEVAL=DATE1)!(DATEVAL=DATE2),"Date of KBBPZ999 is "_DATEVAL_" and should be either "_DATE1_" or "_DATE2)
	D CHKEQ("FILE ;;200",$T(FILE^KBBPZ999),"Incorrect FILE line in result")
	Q
	;
SETDATE(X)	; .EF - put date and time in format used in first line of saved routine
	Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)_"  "_$E(X,9,10)_":"_$E(X,11,12)
	;
GETSETS	; @TEST - get set(s) of data for search criteria
	N UTSTX,KBBPFIL,KBBPI,KBBPEXIT,UTSTCOND,KBBPSET,KBBPQRY
	I '$D(^XTMP("KBBPY","XR1"))!'$D(^XTMP("KBBPY","FNM")) D QUE^KBBPYREF
	S KBBPFIL=200
	D XRPNT^KBBPYNM(KBBPFIL)
	K ^TMP("KBBPY",$J,"X")
	S UTSTX="SEX@200",KBBPI=0,KBBPEXIT=0,KBBPQRY=1,UTSTCOND(1)="X=$P(^VA(200,DUZ,1),U,2)"
	S KBBPSET=$$GETSETS^KBBPYQRY(.KBBPI,.KBBPEXIT,KBBPFIL,KBBPQRY)
	D CHKEQ(1,KBBPSET,"Wrong number returned for number of sets")
	D CHKEQ("SEX^200^4^1;2^^200^^^^X=$P(^VA(200,DUZ,1),U,2)",$G(^TMP("KBBPY",$J,"X",1,200)),"Unexpected global value returned for SEX@NEW PERSON")
	K UTSTCOND
	;
	S KBBPFIL=0 ; SHOULD GET BACK @
	S KBBPSET=$$GETSETS^KBBPYQRY(.KBBPI,.KBBPEXIT,KBBPFIL,KBBPQRY)
	D CHKEQ(0,KBBPSET,"Wrong number returned for number of sets")
	K ^TMP("KBBPY",$J)
	Q
	;
GETFLDS	;
	;
	;
ANDOR1	; @TEST - selection of AND/OR data sets for search
	N SETS
	D ANDOR^KBBPYQRY(.SETS,2) ; two sets of conditions are ORed together
	D CHKEQ(2,SETS,"Wrong number of sets")
	D CHKEQ("1",SETS(1),"Incorrect data for first of two sets")
	D CHKEQ("2",SETS(2),"Incorrect data for second of two sets")
	Q
	;
ANDOR2	; @TEST -
	N SETS
	D ANDOR^KBBPYQRY(.SETS,3) ; 3 sets of conditions go to two AND pairs are ORed with each other
	D CHKEQ(2,SETS,"Wrong number of sets")
	D CHKEQ("1,2",SETS(1),"Incorrect data for first of two sets")
	D CHKEQ("1,3",SETS(2),"Incorrect data for second of two sets")
	Q
	;
	;
OUTDATA	; @TEST - selection of fields for output
	N KBBPI,KBBPEXIT,KBBPFIL,KBBPQRY,KBBPQRY,PATH,UTSTX,UTSTCOND
	S KBBPI=0,KBBPEXIT=0,KBBPFIL=200,KBBPQRY=1,PATH=""
	I '$D(^XTMP("KBBPY","XR1"))!'$D(^XTMP("KBBPY","FNM")) D QUE^KBBPYREF
	D XRPNT^KBBPYNM(KBBPFIL)
	S UTSTX(1)="NAME@200",UTSTX(2)="SEX@200",UTSTX(3)="KEY@200",UTSTX(4)="SEC@200"
	S UTSTCOND(3)="X[""XU""",UTSTCOND(4)="X[""XWB"""
	K ^TMP("KBBPY",$J,"X"),^TMP("KBBPYS",$J,"TOT")
	D OUTDATA^KBBPYQRY(.PATH,.KBBPI,.KBBPEXIT,KBBPFIL,KBBPQRY)
	D CHKEQ("NAME^200^.01^0;1^^200^""B""",$G(^TMP("KBBPYS",$J,"TOT",1,200)),"Incorrect value for NAME field output")
	D CHKEQ("SEX^200^4^1;2^^200^",$G(^TMP("KBBPYS",$J,"TOT",2,200)),"Incorrect value for SEX field output")
	D CHKEQ("KEY^200.051^.01^0;1^51^200.051;200^""AB""^^^X[""XU""",$G(^TMP("KBBPYS",$J,"TOT",3,200)),"Incorrect value for KEY field output")
	D CHKEQ("SECONDARY MENU OPTIONS^200.03^.01^0;1^203^200.03;200^""AD""^^^X[""XWB""",$G(^TMP("KBBPYS",$J,"TOT",4,200)),"Incorrect value for SECONDARY OPTION field output")
	;
	S KBBPFIL=2,KBBPFIL=2,KBBPI=0
	I $S('$D(^TMP("KBBPY",$J,"FIL")):1,^("FIL")'=KBBPFIL:1,'$D(^TMP("KBBPY",$J,"PNT")):1,1:0) D XRPNT^KBBPYNM(KBBPFIL)
	D QUE^KBBPYREF
	S KBBPI=0,KBBPFIL=2 D XRPNT^KBBPYNM(KBBPFIL)
	K UTSTX,UTSTCOND
	S UTSTX(1)="DRUG ALLERGY INDICATION"
	S KBBPEXIT=0
	K ^TMP("KBBPY",$J,"X"),^TMP("KBBPYS",$J,"TOT")
	D OUTDATA^KBBPYQRY(.PATH,.KBBPI,.KBBPEXIT,KBBPFIL,KBBPQRY)
	D CHKEQ("DRUG ALLERGY INDICATION^52^34.1^3;6^^52^",$G(^TMP("KBBPYS",$J,"TOT",1,52)),"Unexpected global value returned for DRUG ALLERGY INDICATION data node")
	Q
	;
OUTANDOR	;  - NOT ACTIVE
	N TSTGLOB1,TSTGLOB2,TOTSETS,UTVALS
	S TSTGLOB1=^TMP("OUTANDOR_UT1",$J,"TOT") K @TSTGLOB1
	S TSTGLOB2=^TMP("OUTANDOR_UT2",$J,"C") K @TSTGLOB2
	S UTVALS(1)="1,2"
	S @TSTGLOB1@(1,200)="NAME^200^.01^0;1^^200^""B"""
	S @TSTGLOB1@(2,200)="SEX^200^4^1;2^^200^"
	S @TSTGLOB1@(3,200)="KEY^200.051^.01^0;1^51^200.051;200^""AB""^^^X[""XU"""
	S @TSTGLOB1@(4,200)="SECONDARY MENU OPTIONS^200.03^.01^0;1^203^200.03;200^""AD""^^^X[""XWB"""
	D OUTANDOR^KBBPYQRY(.TOTSETS,200)
	;W !,"OUTANDOR1",! ZW TOTSETS
	;
	K @TSTGLOB1,@TSTGLOB2,TOTSETS
	S @TSTGLOB1@(1,2)="NAME^2^.01^0;1^^2^""B"""
	S @TSTGLOB1@(2,52)="DRUG^52^6^0;6^^52^^^^X[""ASPRIN"""
	S @TSTGLOB1@(3,52)="FILL DATE^52^22^2;2^^52^^^^(3150000<X)&(3160000>X)"
	S @TSTGLOB1@(4,52)="REFILL DATE^52.1^.01^0;1^1^52.1;52^""AD""^^^(3150000<X)&(3160000>X)"
	S @TSTGLOB2@(52)=".01;2R55^.01;55.03T52"
	S @TSTGLOB2@(55)=".01;2R55"
	K UTVALS S UTVALS(1)="1,2",UTVALS(2)="1,3"
	K TOTSETS
	D OUTANDOR^KBBPYQRY(.TOTSETS,2)
	;W !,"OUTANDOR2",! ZW TOTSETS
	;
	K @TSTGLOB1,@TSTGLOB2
	Q
	;
ROU	;
SAVE	;
LAUNCH	;
OUTTYPE	;
SETGRPS	;
SETG	;
	;
ADD	;@TEST
	N COUNT,DATA,KBBPYR,TAG
	S KBBPYR=$NA(^TMP($J,"KBBPYR")) K @KBBPYR
	S COUNT=0
	S TAG="TAG1"
	S DATA="TAG LINE MARKER"
	S DATA(1)="TAG+1 DATA"
	S DATA(2)="TAG+2 DATA"
	D ADD^KBBPYQRY(.COUNT,TAG,"DATA")
	D CHKEQ^%ut("TAG1 ;;TAG LINE MARKER",@KBBPYR@(1,0),"Incorrect tag line")
	D CHKEQ^%ut(" ;;TAG+1 DATA",@KBBPYR@(2,0),"Incorrect TAG+1 line")
	D CHKEQ^%ut(" ;;TAG+2 DATA",@KBBPYR@(3,0),"Incorrect TAG+2 line")
	D CHKEQ^%ut(" ;;",@KBBPYR@(4,0),"Incorrect TAG+3 line")
	D CHKEQ^%ut(0,$D(@KBBPYR@(5,0)),"No TAG+4 line should be there")
	K @KBBPYR
	Q
	;
ADDSET	;@TEST - add sets of data to routine model
	N SETNUM,COUNTER,KBBPYR,KBBPYS
	S COUNTER=0
	S KBBPYR=$NA(^TMP($J,"KBBPYR")),KBBPYS=$NA(^TMP("KBBPYS",$J))
	K @KBBPYR,@KBBPYS
	; (Set,NumberInSet,FileNumber)
	S @KBBPYS@(1,1,"FILE11")="NAME11^FILE11^FLD11^DATA11^^^^^^CONDITION11"
	S @KBBPYS@(1,2,"FILE12")="NAME12^SFILE12^FLD12^DATA12^^^^^^CONDITION12"
	S @KBBPYS@(2,1,"FILE21")="NAME21^FILE21^FLD21^DATA21^^^^^^CONDITION21"
	F SETNUM=1:1:2 D ADDSET^KBBPYQRY(.COUNTER,SETNUM)
	D CHKEQ("1 ;",$G(@KBBPYR@(1,0)),"BAD SET NUMBER 1 LINE")
	D CHKEQ(" ;;FLD11*FILE11;CONDITION11",$G(@KBBPYR@(2,0)),"NOT EXPECTED DATA FOR LINE 2")
	D CHKEQ(" ;;FLD12*SFILE12;CONDITION12",$G(@KBBPYR@(3,0)),"NOT EXPECTED DATA FOR LINE 3")
	D CHKEQ(" ;;",$G(@KBBPYR@(4,0)),"SHOULD BE ONLY SPACE ;; FOR LINE 4")
	D CHKEQ(" ;;FLD21*FILE21;CONDITION21",$G(@KBBPYR@(6,0)),"Not data expected for Line 6")
	D CHKEQ(0,$D(@KBBPYR@(8,0)),"No line 8 expected")
	K @KBBPYR,@KBBPYS
	Q
	;
	;
CHKEQ(EXPECTED,ACTUAL,COMMENT)	;
	D CHKEQ^%ut(EXPECTED,ACTUAL,$G(COMMENT))
	Q
	;
CHKTF(TEST,COMMENT)	;
	D CHKTF^%ut(TEST,$G(COMMENT))
	Q
	;
XTROU	;
