KBBPUYDO	;JIVEYSOFT.COM/JLI - Unit tests for KBBPYDO1 ;05/09/17  14:31;
	;;0.0;KBBP;
	; includes tests for:
	;   KBBPYDO1
	;
	D EN^%ut($T(+0))
	Q
	;
STARTUP	;
	D STARTUP^KBBPUYNM
	K ^XTMP("KBBPY")
	Q
	;
SHUTDOWN	;
	D SHUTDOWN^KBBPUYNM
	Q
	;
	; Tests for routine KBBPYDO1
GET1ONE	; @TEST - run GET1^KBBPYDO1 for one set of conditions
	N UTSTDATA,DABASE,JLIXCNT,ROOT,NODE,SECMENU,VAL,VDATA
	S UTSTDATA=$NA(^TMP("KBBPUYDO")) K @UTSTDATA
	D BLD1TEST(UTSTDATA,.SECMENU)
	S ROOT=$NA(^TMP($J)) K @ROOT
	S DABASE=DUZ
	S VDATA(1)="DATA1"
	D BLDSET(ROOT,UTSTDATA,.VDATA,1)
	S @ROOT@(VDATA(1),"XT")=1
	K @ROOT@(VDATA(1),"XVAL")
	D GET1^KBBPYDO1($NA(@ROOT@(VDATA(1))))
	D CHKEQ^%ut($P(^VA(200,DUZ,0),U),$G(@ROOT@(VDATA(1),"XVAL",1,1)),"Bad value returned for Name field")
	;
	D BLDSET(ROOT,UTSTDATA,.VDATA,4)
	D GET1^KBBPYDO1($NA(@ROOT@(VDATA(1))))
	D CHKEQ^%ut($P(^VA(200,DUZ,0),U),$G(@ROOT@(VDATA(1),"XVAL",1,1)),"Bad value returned for Name field")
	D CHKEQ^%ut($P(^VA(200,DUZ,1),U,2),$G(@ROOT@(VDATA(1),"XVAL",2,1)),"Bad value returned for Sex field")
	S NODE=$O(^VA(200,DUZ,51," "),-1),VAL=$P(^VA(200,DUZ,51,NODE,0),U),VAL=$P(^DIC(19.1,VAL,0),U)
	S NODE=$O(@ROOT@(VDATA(1),"XVAL",3,1,""),-1)
	D CHKEQ^%ut(VAL,$G(@ROOT@(VDATA(1),"XVAL",3,1,NODE)),"Bad value returned for Security Key field")
	S NODE=$O(^VA(200,DUZ,203," "),-1),VAL=$P(^VA(200,DUZ,203,NODE,0),U),VAL=$P(^DIC(19,VAL,0),U)
	S NODE=$O(@ROOT@(VDATA(1),"XVAL",4,1,""),-1)
	D CHKEQ^%ut(VAL,$G(@ROOT@(VDATA(1),"XVAL",4,1,NODE)),"Bad value returned for Secondary Option field")
	;
	K @UTSTDATA,@ROOT
	Q
	;
GET1TOT	; @TEST - run GET1^KBBPYDO1 for values for output
	N UTSTDATA,DABASE,JLIXCNTL,ROOT,NODE,VAL,VDATA
	S UTSTDATA=$NA(^TMP("KBBPUYDO")) K @UTSTDATA
	D BLDTOT(UTSTDATA)
	S ROOT=$NA(^TMP($J)) K @ROOT
	S VDATA(1)="DATATOT"
	S DABASE=DUZ
	D BLDSET(ROOT,UTSTDATA,.VDATA,4)
	D GET1^KBBPYDO1($NA(@ROOT@(VDATA(1))))
	D CHKEQ^%ut($P(^VA(200,DUZ,0),U),$G(@ROOT@(VDATA(1),"XVAL",1,1)),"Bad value returned for Name field")
	D CHKEQ^%ut($P(^VA(200,DUZ,1),U,2),$G(@ROOT@(VDATA(1),"XVAL",2,1)),"Bad value returned for Sex field")
	S NODE=$O(^VA(200,DUZ,51," "),-1),VAL=$P(^VA(200,DUZ,51,NODE,0),U),VAL=$P(^DIC(19.1,VAL,0),U)
	S NODE=$O(@ROOT@(VDATA(1),"XVAL",3,1,""),-1)
	D CHKEQ^%ut(VAL,$G(@ROOT@(VDATA(1),"XVAL",3,1,NODE)),"Bad value returned for Security Key field")
	S NODE=$O(^VA(200,DUZ,203," "),-1),VAL=$P(^VA(200,DUZ,203,NODE,0),U),VAL=$P(^DIC(19,VAL,0),U)
	S NODE=$O(@ROOT@(VDATA(1),"XVAL",4,1,""),-1)
	D CHKEQ^%ut(VAL,$G(@ROOT@(VDATA(1),"XVAL",4,1,NODE)),"Bad value returned for Secondary Option field")
	;
	K @UTSTDATA,@ROOT
	Q
	;
GET1TOT2	; @TEST - run GET1^KBBPYDO1 for values for output
	N UTSTDATA,DABASE,JLIXCNTL,ROOT,NODE,VAL,VDATA,COND,CONDTOT,DATATOT,DONE,DRUG,DRUGNAME,FILLCOND
	N FILLDATE,I,J,JLI,JLI1,K,KBBPFIL,KBBPFILN,KBBPSETS,PATH,PNT,PTNAME,REFILDAT,RFILCOND,TOTSETS,UTSTCOND
	N VARTOT,X,X0,X1,X2,X4,X5,X6,X8,X9,XBASE,XCONDR
	S UTSTDATA=$NA(^TMP("KBBPUYDO")) K @UTSTDATA
	D BLDTOT2(UTSTDATA)
	S ROOT=$NA(^TMP($J)) K @ROOT
	S VDATA(1)="DATATOT"
	F I=0:0 S I=$O(^PS(55,I)) Q:I'>0  D  Q:DONE
	. F J=0:0 S J=$O(^PS(55,I,"P",J)) Q:J'>0  D  Q:DONE
	. . S PNT=+$G(^PS(55,I,"P",J,0)) Q:PNT'>0  D  Q:DONE
	. . . S X=^PSRX(PNT,0),DRUG=$P(X,U,6),DRUGNAME=$P($G(^PSDRUG(DRUG,0)),U) Q:DRUGNAME=""
	. . . S FILLDATE=$P($G(^PSRX(PNT,2)),U,2) Q:FILLDATE=""
	. . . F K=0:0 S K=$O(^PSRX(PNT,1,K)) Q:K'>0  S REFILDAT=+^PSRX(PNT,1,K,0) Q:'REFILDAT  D
	. . . . S FILLCOND="X="_FILLDATE,RFILCOND="X="_REFILDAT
	. . . . S DONE=1,DABASE=I
	. . . . Q
	. . . Q
	. . Q
	. Q
	I '$D(DABASE) W !,"GET1TOT2^KBBPUYDO - No Pharmacy Patient data found for tests - skipping",! Q
	S PTNAME=$P(^DPT(DABASE,0),U)
	D BLDSET(ROOT,UTSTDATA,.VDATA,4)
	S JLI=ROOT,JLI1=$E(ROOT,1,$L(ROOT)-1)
	S COND("TOT")="CONDTOT"
	S CONDTOT(2)="I X="_DRUGNAME
	S CONDTOT(3)=FILLCOND
	S CONDTOT(4)=RFILCOND
	S UTSTCOND(2)="X="_DRUGNAME
	S UTSTCOND(3)=FILLCOND
	S UTSTCOND(4)=RFILCOND
	S KBBPFIL=2,KBBPFILN="PATIENT"
	S DATATOT=$NA(@ROOT@("DATATOT"))
	S KBBPSETS=2,KBBPSETS(1)="1,",KBBPSETS(2)="2,"
	S PATH(1)=".01;2R55^.01;55.03T52"
	S TOTSETS=2,TOTSETS(1)="2;3;",TOTSETS(2)="2;4;"
	S VARTOT(1)=".01;2",VARTOT(2)="6;52",VARTOT(3)="22;52",VARTOT(4)=".01;52.1"
	S X0=55.03,X1="",X2=55,X4=52,X5=52.1,X6=.01,X8="",X9="REFILL DATE^52.1^.01^0;1^1^52.1;52^""AD""",XBASE="^PS(55,DABASE,""P"",DALOOP3"
	S XCONDR="CONDTOT"
	D GET1^KBBPYDO1($NA(@ROOT@(VDATA(1))))
	D CHKEQ^%ut(PTNAME,@ROOT@(VDATA(1),"XVAL",1,1),"Bad value returned for Patient Name field")
	D CHKEQ^%ut(DRUGNAME,@ROOT@(VDATA(1),"XVAL",2,1),"Bad value returned for Drug Name field")
	;
	K @UTSTDATA,@ROOT
	Q
	;
CHKIT	;@TEST - check if current data meets conditions and remove other values
	N UTSTDATA,DABASE,JLIXCNT,COND,NODE,ROOT,SECMENU,VAL,VDATA
	S UTSTDATA=$NA(^TMP("KBBPUYDO")) K @UTSTDATA
	D BLD1TEST(UTSTDATA,.SECMENU)
	S COND(1)="I X=$P(^VA(200,DUZ,0),U)"
	S COND(2)="I X=$P(^VA(200,DUZ,1),U,2)"
	S COND(3)="I X=""XUPROGMODE"""
	S COND(4)="I X="""_SECMENU_""""
	S VDATA(1)="DATA1"
	S ROOT=$NA(^TMP($J)) K @ROOT
	S DABASE=DUZ
	D BLDSET(ROOT,UTSTDATA,.VDATA,4)
	S ROOT=$NA(@ROOT@(VDATA(1)))
	D CHKIT^KBBPYDO1(ROOT,"COND")
	D CHKEQ^%ut($P(^VA(200,DUZ,0),U),$G(@ROOT@("XVAL",1,1)),"Bad value returned for Name field")
	D CHKEQ^%ut($P(^VA(200,DUZ,1),U,2),$G(@ROOT@("XVAL",2,1)),"Bad value returned for Sex field")
	S NODE=$O(@ROOT@("XVAL",3,1," "),-1)
	D CHKEQ^%ut("XUPROGMODE",$G(@ROOT@("XVAL",3,1,NODE)),"Bad value returned for Security Key field")
	S NODE=$O(@ROOT@("XVAL",4,1,""),-1),VAL=$G(@ROOT@("XVAL",4,1,NODE))
	D CHKEQ^%ut(SECMENU,VAL,"Incorrect value returned for Secondary Option field")
	K @UTSTDATA
	Q
	;
BLDSET(ROOT,UTSTDATA,DATA,NVALS)	; Build data arr/ay for specified number of variables
	; DATA - passed by reference
	N ARG1,ARG2,I,LBL,NCNT,XROOT,YROOT,ZROOT
	K @ROOT
	F I=0:0 S I=$O(DATA(I)) Q:I'>0  D
	. S LBL="" F  S LBL=$O(@UTSTDATA@(DATA(I),LBL)) Q:LBL=""  S:$D(@UTSTDATA@(DATA(I),LBL))#2 @ROOT@(DATA(I),LBL)=^(LBL) D
	. . F NCNT=1:1:NVALS S XROOT=$NA(@UTSTDATA@(DATA(I),LBL,NCNT)),YROOT=$NA(@ROOT@(DATA(I),LBL,NCNT)) D
	. . . I $D(@XROOT)#2 S @YROOT=@XROOT
	. . . S ARG1="" F  S ARG1=$O(@XROOT@(ARG1)) Q:ARG1=""  S:$D(@XROOT@(ARG1))#2 @YROOT@(ARG1)=@XROOT@(ARG1) I $D(@XROOT@(ARG1))>1 D
	. . . . S ZROOT=$NA(@XROOT@(ARG1))
	. . . . S ARG2="" F  S ARG2=$O(@ZROOT@(ARG2)) Q:ARG2=""  S:$D(@ZROOT@(ARG2))#2 @YROOT@(ARG1,ARG2)=@ZROOT@(ARG2) I $D(@XROOT@(ARG2))>1 D
	. . . . Q
	. . . Q
	. . Q
	. Q
	Q
	;
BLD1TEST(ROOT,SECMENU)	; build array of single data set data
	S @ROOT@("DATA1","XT")="4"
	S @ROOT@("DATA1","XT",1)="I $D(DA(""P200"")) S DA=DA(""P200""),XTVDATA=$S($D(^VA(200,DA,0)):$P(^(0),""^"",1),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",1,NVAL)=XTVDATA"
	S @ROOT@("DATA1","XT",2)="I $D(DA(""P200"")) S DA=DA(""P200""),XTVDATA=$S($D(^VA(200,DA,1)):$P(^(1),""^"",2),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",2,NVAL)=XTVDATA"
	S @ROOT@("DATA1","XT",3)="I $D(DA(""P200"")) S DA(1)=DA(""P200"") X @ROOT@(""XT"",3,1)"
	S @ROOT@("DATA1","XT",3,0)="S XTVDATA=$S($D(^VA(200,DA(1),51,DA,0)):$P(^(0),""^"",1),1:""""),XTVDATA=$S($D(^DIC(19.1,+XTVDATA,0)):$P(^(0),U),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",3,NVAL,NVAL1)=XTVDATA"
	S @ROOT@("DATA1","XT",3,1)="S DA=0 F NVAL1=1:1 S DA=$O(^VA(200,DA(1),51,DA)) Q:DA'>0  X @ROOT@(""XT"",3,0)"
	S @ROOT@("DATA1","XT",4)="I $D(DA(""P200"")) S DA(1)=DA(""P200"") X @ROOT@(""XT"",4,1)"
	S @ROOT@("DATA1","XT",4,0)="S XTVDATA=$S($D(^VA(200,DA(1),203,DA,0)):$P(^(0),""^"",1),1:""""),XTVDATA=$S($D(^DIC(19,+XTVDATA,0)):$P(^(0),U),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",4,NVAL,NVAL1)=XTVDATA"
	S @ROOT@("DATA1","XT",4,1)="S DA=0 F NVAL1=1:1 S DA=$O(^VA(200,DA(1),203,DA)) Q:DA'>0  X @ROOT@(""XT"",4,0)"
	S @ROOT@("DATA1","XTDA")="1"
	S @ROOT@("DATA1","XTDA",1)="S DA(""P200"")=DABASE"
	S @ROOT@("DATA1","XTN",1)="200"
	S @ROOT@("DATA1","XTN",2)="200"
	S @ROOT@("DATA1","XTN",3)="200.051;200"
	S @ROOT@("DATA1","XTN",4)="200.03;200"
	S @ROOT@("DATA1","XTNM",1)="NEW PERSON NAME"
	S @ROOT@("DATA1","XTNM",2)="NEW PERSON SEX"
	S @ROOT@("DATA1","XTNM",3)="NEW PERSON KEY"
	S @ROOT@("DATA1","XTNM",4)="NEW PERSON SECONDARY MENU OPTIONS"
	S @ROOT@("DATA1","XTS",1)=""
	S @ROOT@("DATA1","XVAL",1,1)=$P(^VA(200,DUZ,0),U)
	S @ROOT@("DATA1","XVAL",2,1)=$P(^VA(200,DUZ,1),U,2)
	S @ROOT@("DATA1","XVAL",3,1,2)="XUPROGMODE"
	S SECMENU=+$G(^VA(200,DUZ,203,1,0)),SECMENU=$P($G(^DIC(19,SECMENU,0)),U)
	S @ROOT@("DATA1","XVAL",4,1,1)=SECMENU
	Q
	;
BLDTOT(ROOT)	;
	S @ROOT@("DATATOT","XM",1)=".01"
	S @ROOT@("DATATOT","XM",2)="4"
	S @ROOT@("DATATOT","XM",3)=".01"
	S @ROOT@("DATATOT","XM",4)=".01"
	S @ROOT@("DATATOT","XT")="4"
	S @ROOT@("DATATOT","XT",1)="I $D(DA(""P200"")) S DA=DA(""P200""),XTVDATA=$S($D(^VA(200,DA,0)):$P(^(0),""^"",1),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",1,NVAL)=XTVDATA"
	S @ROOT@("DATATOT","XT",2)="I $D(DA(""P200"")) S DA=DA(""P200""),XTVDATA=$S($D(^VA(200,DA,1)):$P(^(1),""^"",2),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",2,NVAL)=XTVDATA"
	S @ROOT@("DATATOT","XT",3)="I $D(DA(""P200"")) S DA(1)=DA(""P200"") X @ROOT@(""XT"",3,1)"
	S @ROOT@("DATATOT","XT",3,0)="S XTVDATA=$S($D(^VA(200,DA(1),51,DA,0)):$P(^(0),""^"",1),1:""""),XTVDATA=$S($D(^DIC(19.1,+XTVDATA,0)):$P(^(0),U),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",3,NVAL,NVAL1)=XTVDATA"
	S @ROOT@("DATATOT","XT",3,1)="S DA=0 F NVAL1=1:1 S DA=$O(^VA(200,DA(1),51,DA)) Q:DA'>0  X @ROOT@(""XT"",3,0)"
	S @ROOT@("DATATOT","XT",4)="I $D(DA(""P200"")) S DA(1)=DA(""P200"") X @ROOT@(""XT"",4,1)"
	S @ROOT@("DATATOT","XT",4,0)="S XTVDATA=$S($D(^VA(200,DA(1),203,DA,0)):$P(^(0),""^"",1),1:""""),XTVDATA=$S($D(^DIC(19,+XTVDATA,0)):$P(^(0),U),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",4,NVAL,NVAL1)=XTVDATA"
	S @ROOT@("DATATOT","XT",4,1)="S DA=0 F NVAL1=1:1 S DA=$O(^VA(200,DA(1),203,DA)) Q:DA'>0  X @ROOT@(""XT"",4,0)"
	S @ROOT@("DATATOT","XTDA")="1"
	S @ROOT@("DATATOT","XTDA",1)="S DA(""P200"")=DABASE"
	S @ROOT@("DATATOT","XTN",1)="200"
	S @ROOT@("DATATOT","XTN",2)="200"
	S @ROOT@("DATATOT","XTN",3)="200.051;200"
	S @ROOT@("DATATOT","XTN",4)="200.03;200"
	S @ROOT@("DATATOT","XTNM",1)="NEW PERSON NAME"
	S @ROOT@("DATATOT","XTNM",2)="NEW PERSON SEX"
	S @ROOT@("DATATOT","XTNM",3)="NEW PERSON KEY"
	S @ROOT@("DATATOT","XTNM",4)="NEW PERSON SECONDARY MENU OPTIONS"
	S @ROOT@("DATATOT","XTS",1)=""
	Q
	;
BLDTOT2(ROOT)	;
	S @ROOT@("DATATOT","XM",1)=.01
	S @ROOT@("DATATOT","XM",2)=6
	S @ROOT@("DATATOT","XM",3)=22
	S @ROOT@("DATATOT","XM",4)=.01
	S @ROOT@("DATATOT","XT")=4
	S @ROOT@("DATATOT","XT",1)="I $D(DA(""P2"")) S DA=DA(""P2""),XTVDATA=$S($D(^DPT(DA,0)):$P(^(0),""^"",1),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",1,NVAL)=XTVDATA"
	S @ROOT@("DATATOT","XT",2)="I $D(DA(""P52"")) S DA=DA(""P52""),XTVDATA=$S($D(^PSRX(DA,0)):$P(^(0),""^"",6),1:""""),XTVDATA=$S($D(^PSDRUG(+XTVDATA,0)):$P(^(0),U),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",2,NVAL)=XTVDATA"
	S @ROOT@("DATATOT","XT",3)="I $D(DA(""P52"")) S DA=DA(""P52""),XTVDATA=$S($D(^PSRX(DA,2)):$P(^(2),""^"",2),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",3,NVAL)=XTVDATA"
	S @ROOT@("DATATOT","XT",4)="I $D(DA(""P52"")) S DA(1)=DA(""P52"") X @ROOT@(""XT"",4,1)"
	S @ROOT@("DATATOT","XT",4,0)="S XTVDATA=$S($D(^PSRX(DA(1),1,DA,0)):$P(^(0),""^"",1),1:"""") S:XTVDATA'="""" @ROOT@(""XVAL"",4,NVAL,NVAL1)=XTVDATA"
	S @ROOT@("DATATOT","XT",4,1)="S DA=0 F NVAL1=1:1 S DA=$O(^PSRX(DA(1),1,DA)) Q:DA'>0  X @ROOT@(""XT"",4,0)"
	S @ROOT@("DATATOT","XTDA")=3
	S @ROOT@("DATATOT","XTDA",1)="S DA(""P2"")=DABASE"
	S @ROOT@("DATATOT","XTDA",2)="S DA(""P55"")=DABASE"
	S @ROOT@("DATATOT","XTDA",3)="S DA(""P52"")=$S($D(^PS(55,DABASE,""P"",DALOOP3,0)):+$P(^(0),U,1),1:0)"
	S @ROOT@("DATATOT","XTDA",3,1)="S DALOOP3=$O(^PS(55,DABASE,""P"",DALOOP3))"
	S @ROOT@("DATATOT","XTN",1)=2
	S @ROOT@("DATATOT","XTN",2)=52
	S @ROOT@("DATATOT","XTN",3)=52
	S @ROOT@("DATATOT","XTN",4)="52.1;52"
	S @ROOT@("DATATOT","XTNM",1)="PATIENT NAME"
	S @ROOT@("DATATOT","XTNM",2)="PRESCRIPTION DRUG"
	S @ROOT@("DATATOT","XTNM",3)="PRESCRIPTION FILL DATE"
	S @ROOT@("DATATOT","XTNM",4)="PRESCRIPTION REFILL DATE"
	S @ROOT@("DATATOT","XTS",1)=""
	S @ROOT@("DATATOT","XTS",2)=""
	S @ROOT@("DATATOT","XTS",3)=3
	Q
	;
